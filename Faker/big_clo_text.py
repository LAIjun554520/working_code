# # ⾃动化⽤faker造数据保存到txt
# from faker import Faker
# # import pymysql
# class Create_Data(object):
#     def __init__(self):
#         # 选择中⽂
#         fake = Faker("zh_CN")
#         # ⽣成数据改变循环体来控制数据量rang(?)
#         self.data_total = [
#             [x,fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word(),fake.word()]
#             for x in range(500)]
#         print(self.data_total)
#     def deal_txt(self):
#         with open("/Users/simons/PycharmProjects/TEST/studio_performance_test/Faker/text_200_clo.txt", "w", errors="ignore", encoding="UTF-8") as output:
#             output.write("clo_1,clo_2,clo_3,clo_4,clo_5,clo_6,clo_7,clo_8,clo_9,clo_10,clo_11,clo_12,clo_13,clo_14,clo_15,clo_16,clo_17,clo_18,clo_19,clo_20,clo_21,clo_22,clo_23,clo_24,clo_25,clo_26,clo_27,clo_28,clo_29,clo_30,clo_31,clo_32,clo_33,clo_34,clo_35,clo_36,clo_37,clo_38,clo_39,clo_40,clo_41,clo_42,clo_43,clo_44,clo_45,clo_46,clo_47,clo_48,clo_49,clo_50,clo_51,clo_52,clo_53,clo_54,clo_55,clo_56,clo_57,clo_58,clo_59,clo_60,clo_61,clo_62,clo_63,clo_64,clo_65,clo_66,clo_67,clo_68,clo_69,clo_70,clo_71,clo_72,clo_73,clo_74,clo_75,clo_76,clo_77,clo_78,clo_79,clo_80,clo_81,clo_82,clo_83,clo_84,clo_85,clo_86,clo_87,clo_88,clo_89,clo_90,clo_91,clo_92,clo_93,clo_94,clo_95,clo_96,clo_97,clo_98,clo_99,clo_100,clo_101,clo_102,clo_103,clo_104,clo_105,clo_106,clo_107,clo_108,clo_109,clo_110,clo_111,clo_112,clo_113,clo_114,clo_115,clo_116,clo_117,clo_118,clo_119,clo_120,clo_121,clo_122,clo_123,clo_124,clo_125,clo_126,clo_127,clo_128,clo_129,clo_130,clo_131,clo_132,clo_133,clo_134,clo_135,clo_136,clo_137,clo_138,clo_139,clo_140,clo_141,clo_142,clo_143,clo_144,clo_145,clo_146,clo_147,clo_148,clo_149,clo_150,clo_151,clo_152,clo_153,clo_154,clo_155,clo_156,clo_157,clo_158,clo_159,clo_160,clo_161,clo_162,clo_163,clo_164,clo_165,clo_166,clo_167,clo_168,clo_169,clo_170,clo_171,clo_172,clo_173,clo_174,clo_175,clo_176,clo_177,clo_178,clo_179,clo_180,clo_181,clo_182,clo_183,clo_184,clo_185,clo_186,clo_187,clo_188,clo_189,clo_190,clo_191,clo_192,clo_193,clo_194,clo_195,clo_196,clo_197,clo_198,clo_199\n")
#
#             for row in self.data_total:
#                 rowtxt = "{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}"\
#                     .format(row[0],row[1],row[2],row[3],row[4],row[5],row[6],row[7],row[8],row[9],row[10],row[11],row[12],row[13],row[14],row[15],row[16],row[17],row[18],row[19],row[20],row[21],row[22],row[23],row[24],row[25],row[26],row[27],row[28],row[29],row[30],row[31],row[32],row[33],row[34],row[35],row[36],row[37],row[38],row[39],row[40],row[41],row[42],row[43],row[44],row[45],row[46],row[47],row[48],row[49],row[50],row[51],row[52],row[53],row[54],row[55],row[56],row[57],row[58],row[59],row[60],row[61],row[62],row[63],row[64],row[65],row[66],row[67],row[68],row[69],row[70],row[71],row[72],row[73],row[74],row[75],row[76],row[77],row[78],row[79],row[80],row[81],row[82],row[83],row[84],row[85],row[86],row[87],row[88],row[89],row[90],row[91],row[92],row[93],row[94],row[95],row[96],row[97],row[98],row[99],row[100],row[101],row[102],row[103],row[104],row[105],row[106],row[107],row[108],row[109],row[110],row[111],row[112],row[113],row[114],row[115],row[116],row[117],row[118],row[119],row[120],row[121],row[122],row[123],row[124],row[125],row[126],row[127],row[128],row[129],row[130],row[131],row[132],row[133],row[134],row[135],row[136],row[137],row[138],row[139],row[140],row[141],row[142],row[143],row[144],row[145],row[146],row[147],row[148],row[149],row[150],row[151],row[152],row[153],row[154],row[155],row[156],row[157],row[158],row[159],row[160],row[161],row[162],row[163],row[164],row[165],row[166],row[167],row[168],row[169],row[170],row[171],row[172],row[173],row[174],row[175],row[176],row[177],row[178],row[179],row[180],row[181],row[182],row[183],row[184],row[185],row[186],row[187],row[188],row[189],row[190],row[191],row[192],row[193],row[194],row[195],row[196],row[197],row[198],row[199])
#                 output.write(rowtxt)
#                 output.write("\n")
#             output.close()
#             print("Processing completed to txt")
# if __name__ == '__main__':
#     data = Create_Data()
#     data.deal_txt()


# ⾃动化⽤faker造数据保存到txt
from faker import Faker
# import pymysql
class Create_Data(object):
    def __init__(self):
        # 选择中⽂
        fake = Faker("zh_CN")
        # ⽣成数据改变循环体来控制数据量rang(?)
        self.data_total = [
            [x,fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),
fake.word(),]
            for x in range(500)]
        print(self.data_total)
    def deal_txt(self):
        with open("/Users/simons/PycharmProjects/TEST/studio_performance_test/Faker/text_1000_clo.txt", "w", errors="ignore", encoding="UTF-8") as output:
            output.write("clo_1,clo_2,clo_3,clo_4,clo_5,clo_6,clo_7,clo_8,clo_9,clo_10,clo_11,clo_12,clo_13,clo_14,clo_15,clo_16,clo_17,clo_18,clo_19,clo_20,clo_21,clo_22,clo_23,clo_24,clo_25,clo_26,clo_27,clo_28,clo_29,clo_30,clo_31,clo_32,clo_33,clo_34,clo_35,clo_36,clo_37,clo_38,clo_39,clo_40,clo_41,clo_42,clo_43,clo_44,clo_45,clo_46,clo_47,clo_48,clo_49,clo_50,clo_51,clo_52,clo_53,clo_54,clo_55,clo_56,clo_57,clo_58,clo_59,clo_60,clo_61,clo_62,clo_63,clo_64,clo_65,clo_66,clo_67,clo_68,clo_69,clo_70,clo_71,clo_72,clo_73,clo_74,clo_75,clo_76,clo_77,clo_78,clo_79,clo_80,clo_81,clo_82,clo_83,clo_84,clo_85,clo_86,clo_87,clo_88,clo_89,clo_90,clo_91,clo_92,clo_93,clo_94,clo_95,clo_96,clo_97,clo_98,clo_99,clo_100,clo_101,clo_102,clo_103,clo_104,clo_105,clo_106,clo_107,clo_108,clo_109,clo_110,clo_111,clo_112,clo_113,clo_114,clo_115,clo_116,clo_117,clo_118,clo_119,clo_120,clo_121,clo_122,clo_123,clo_124,clo_125,clo_126,clo_127,clo_128,clo_129,clo_130,clo_131,clo_132,clo_133,clo_134,clo_135,clo_136,clo_137,clo_138,clo_139,clo_140,clo_141,clo_142,clo_143,clo_144,clo_145,clo_146,clo_147,clo_148,clo_149,clo_150,clo_151,clo_152,clo_153,clo_154,clo_155,clo_156,clo_157,clo_158,clo_159,clo_160,clo_161,clo_162,clo_163,clo_164,clo_165,clo_166,clo_167,clo_168,clo_169,clo_170,clo_171,clo_172,clo_173,clo_174,clo_175,clo_176,clo_177,clo_178,clo_179,clo_180,clo_181,clo_182,clo_183,clo_184,clo_185,clo_186,clo_187,clo_188,clo_189,clo_190,clo_191,clo_192,clo_193,clo_194,clo_195,clo_196,clo_197,clo_198,clo_199,clo_200,clo_201,clo_202,clo_203,clo_204,clo_205,clo_206,clo_207,clo_208,clo_209,clo_210,clo_211,clo_212,clo_213,clo_214,clo_215,clo_216,clo_217,clo_218,clo_219,clo_220,clo_221,clo_222,clo_223,clo_224,clo_225,clo_226,clo_227,clo_228,clo_229,clo_230,clo_231,clo_232,clo_233,clo_234,clo_235,clo_236,clo_237,clo_238,clo_239,clo_240,clo_241,clo_242,clo_243,clo_244,clo_245,clo_246,clo_247,clo_248,clo_249,clo_250,clo_251,clo_252,clo_253,clo_254,clo_255,clo_256,clo_257,clo_258,clo_259,clo_260,clo_261,clo_262,clo_263,clo_264,clo_265,clo_266,clo_267,clo_268,clo_269,clo_270,clo_271,clo_272,clo_273,clo_274,clo_275,clo_276,clo_277,clo_278,clo_279,clo_280,clo_281,clo_282,clo_283,clo_284,clo_285,clo_286,clo_287,clo_288,clo_289,clo_290,clo_291,clo_292,clo_293,clo_294,clo_295,clo_296,clo_297,clo_298,clo_299,clo_300,clo_301,clo_302,clo_303,clo_304,clo_305,clo_306,clo_307,clo_308,clo_309,clo_310,clo_311,clo_312,clo_313,clo_314,clo_315,clo_316,clo_317,clo_318,clo_319,clo_320,clo_321,clo_322,clo_323,clo_324,clo_325,clo_326,clo_327,clo_328,clo_329,clo_330,clo_331,clo_332,clo_333,clo_334,clo_335,clo_336,clo_337,clo_338,clo_339,clo_340,clo_341,clo_342,clo_343,clo_344,clo_345,clo_346,clo_347,clo_348,clo_349,clo_350,clo_351,clo_352,clo_353,clo_354,clo_355,clo_356,clo_357,clo_358,clo_359,clo_360,clo_361,clo_362,clo_363,clo_364,clo_365,clo_366,clo_367,clo_368,clo_369,clo_370,clo_371,clo_372,clo_373,clo_374,clo_375,clo_376,clo_377,clo_378,clo_379,clo_380,clo_381,clo_382,clo_383,clo_384,clo_385,clo_386,clo_387,clo_388,clo_389,clo_390,clo_391,clo_392,clo_393,clo_394,clo_395,clo_396,clo_397,clo_398,clo_399,clo_400,clo_401,clo_402,clo_403,clo_404,clo_405,clo_406,clo_407,clo_408,clo_409,clo_410,clo_411,clo_412,clo_413,clo_414,clo_415,clo_416,clo_417,clo_418,clo_419,clo_420,clo_421,clo_422,clo_423,clo_424,clo_425,clo_426,clo_427,clo_428,clo_429,clo_430,clo_431,clo_432,clo_433,clo_434,clo_435,clo_436,clo_437,clo_438,clo_439,clo_440,clo_441,clo_442,clo_443,clo_444,clo_445,clo_446,clo_447,clo_448,clo_449,clo_450,clo_451,clo_452,clo_453,clo_454,clo_455,clo_456,clo_457,clo_458,clo_459,clo_460,clo_461,clo_462,clo_463,clo_464,clo_465,clo_466,clo_467,clo_468,clo_469,clo_470,clo_471,clo_472,clo_473,clo_474,clo_475,clo_476,clo_477,clo_478,clo_479,clo_480,clo_481,clo_482,clo_483,clo_484,clo_485,clo_486,clo_487,clo_488,clo_489,clo_490,clo_491,clo_492,clo_493,clo_494,clo_495,clo_496,clo_497,clo_498,clo_499,clo_500,clo_501,clo_502,clo_503,clo_504,clo_505,clo_506,clo_507,clo_508,clo_509,clo_510,clo_511,clo_512,clo_513,clo_514,clo_515,clo_516,clo_517,clo_518,clo_519,clo_520,clo_521,clo_522,clo_523,clo_524,clo_525,clo_526,clo_527,clo_528,clo_529,clo_530,clo_531,clo_532,clo_533,clo_534,clo_535,clo_536,clo_537,clo_538,clo_539,clo_540,clo_541,clo_542,clo_543,clo_544,clo_545,clo_546,clo_547,clo_548,clo_549,clo_550,clo_551,clo_552,clo_553,clo_554,clo_555,clo_556,clo_557,clo_558,clo_559,clo_560,clo_561,clo_562,clo_563,clo_564,clo_565,clo_566,clo_567,clo_568,clo_569,clo_570,clo_571,clo_572,clo_573,clo_574,clo_575,clo_576,clo_577,clo_578,clo_579,clo_580,clo_581,clo_582,clo_583,clo_584,clo_585,clo_586,clo_587,clo_588,clo_589,clo_590,clo_591,clo_592,clo_593,clo_594,clo_595,clo_596,clo_597,clo_598,clo_599,clo_600,clo_601,clo_602,clo_603,clo_604,clo_605,clo_606,clo_607,clo_608,clo_609,clo_610,clo_611,clo_612,clo_613,clo_614,clo_615,clo_616,clo_617,clo_618,clo_619,clo_620,clo_621,clo_622,clo_623,clo_624,clo_625,clo_626,clo_627,clo_628,clo_629,clo_630,clo_631,clo_632,clo_633,clo_634,clo_635,clo_636,clo_637,clo_638,clo_639,clo_640,clo_641,clo_642,clo_643,clo_644,clo_645,clo_646,clo_647,clo_648,clo_649,clo_650,clo_651,clo_652,clo_653,clo_654,clo_655,clo_656,clo_657,clo_658,clo_659,clo_660,clo_661,clo_662,clo_663,clo_664,clo_665,clo_666,clo_667,clo_668,clo_669,clo_670,clo_671,clo_672,clo_673,clo_674,clo_675,clo_676,clo_677,clo_678,clo_679,clo_680,clo_681,clo_682,clo_683,clo_684,clo_685,clo_686,clo_687,clo_688,clo_689,clo_690,clo_691,clo_692,clo_693,clo_694,clo_695,clo_696,clo_697,clo_698,clo_699,clo_700,clo_701,clo_702,clo_703,clo_704,clo_705,clo_706,clo_707,clo_708,clo_709,clo_710,clo_711,clo_712,clo_713,clo_714,clo_715,clo_716,clo_717,clo_718,clo_719,clo_720,clo_721,clo_722,clo_723,clo_724,clo_725,clo_726,clo_727,clo_728,clo_729,clo_730,clo_731,clo_732,clo_733,clo_734,clo_735,clo_736,clo_737,clo_738,clo_739,clo_740,clo_741,clo_742,clo_743,clo_744,clo_745,clo_746,clo_747,clo_748,clo_749,clo_750,clo_751,clo_752,clo_753,clo_754,clo_755,clo_756,clo_757,clo_758,clo_759,clo_760,clo_761,clo_762,clo_763,clo_764,clo_765,clo_766,clo_767,clo_768,clo_769,clo_770,clo_771,clo_772,clo_773,clo_774,clo_775,clo_776,clo_777,clo_778,clo_779,clo_780,clo_781,clo_782,clo_783,clo_784,clo_785,clo_786,clo_787,clo_788,clo_789,clo_790,clo_791,clo_792,clo_793,clo_794,clo_795,clo_796,clo_797,clo_798,clo_799,clo_800,clo_801,clo_802,clo_803,clo_804,clo_805,clo_806,clo_807,clo_808,clo_809,clo_810,clo_811,clo_812,clo_813,clo_814,clo_815,clo_816,clo_817,clo_818,clo_819,clo_820,clo_821,clo_822,clo_823,clo_824,clo_825,clo_826,clo_827,clo_828,clo_829,clo_830,clo_831,clo_832,clo_833,clo_834,clo_835,clo_836,clo_837,clo_838,clo_839,clo_840,clo_841,clo_842,clo_843,clo_844,clo_845,clo_846,clo_847,clo_848,clo_849,clo_850,clo_851,clo_852,clo_853,clo_854,clo_855,clo_856,clo_857,clo_858,clo_859,clo_860,clo_861,clo_862,clo_863,clo_864,clo_865,clo_866,clo_867,clo_868,clo_869,clo_870,clo_871,clo_872,clo_873,clo_874,clo_875,clo_876,clo_877,clo_878,clo_879,clo_880,clo_881,clo_882,clo_883,clo_884,clo_885,clo_886,clo_887,clo_888,clo_889,clo_890,clo_891,clo_892,clo_893,clo_894,clo_895,clo_896,clo_897,clo_898,clo_899,clo_900,clo_901,clo_902,clo_903,clo_904,clo_905,clo_906,clo_907,clo_908,clo_909,clo_910,clo_911,clo_912,clo_913,clo_914,clo_915,clo_916,clo_917,clo_918,clo_919,clo_920,clo_921,clo_922,clo_923,clo_924,clo_925,clo_926,clo_927,clo_928,clo_929,clo_930,clo_931,clo_932,clo_933,clo_934,clo_935,clo_936,clo_937,clo_938,clo_939,clo_940,clo_941,clo_942,clo_943,clo_944,clo_945,clo_946,clo_947,clo_948,clo_949,clo_950,clo_951,clo_952,clo_953,clo_954,clo_955,clo_956,clo_957,clo_958,clo_959,clo_960,clo_961,clo_962,clo_963,clo_964,clo_965,clo_966,clo_967,clo_968,clo_969,clo_970,clo_971,clo_972,clo_973,clo_974,clo_975,clo_976,clo_977,clo_978,clo_979,clo_980,clo_981,clo_982,clo_983,clo_984,clo_985,clo_986,clo_987,clo_988,clo_989,clo_990,clo_991,clo_992,clo_993,clo_994,clo_995,clo_996,clo_997,clo_998,clo_999,clo_1000\n")

            for row in self.data_total:
                rowtxt = "{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{},{}"\
                    .format(row[0],row[1],row[2],row[3],row[4],row[5],row[6],row[7],row[8],row[9],row[10],row[11],row[12],row[13],row[14],row[15],row[16],row[17],row[18],row[19],row[20],row[21],row[22],row[23],row[24],row[25],row[26],row[27],row[28],row[29],row[30],row[31],row[32],row[33],row[34],row[35],row[36],row[37],row[38],row[39],row[40],row[41],row[42],row[43],row[44],row[45],row[46],row[47],row[48],row[49],row[50],row[51],row[52],row[53],row[54],row[55],row[56],row[57],row[58],row[59],row[60],row[61],row[62],row[63],row[64],row[65],row[66],row[67],row[68],row[69],row[70],row[71],row[72],row[73],row[74],row[75],row[76],row[77],row[78],row[79],row[80],row[81],row[82],row[83],row[84],row[85],row[86],row[87],row[88],row[89],row[90],row[91],row[92],row[93],row[94],row[95],row[96],row[97],row[98],row[99],row[100],row[101],row[102],row[103],row[104],row[105],row[106],row[107],row[108],row[109],row[110],row[111],row[112],row[113],row[114],row[115],row[116],row[117],row[118],row[119],row[120],row[121],row[122],row[123],row[124],row[125],row[126],row[127],row[128],row[129],row[130],row[131],row[132],row[133],row[134],row[135],row[136],row[137],row[138],row[139],row[140],row[141],row[142],row[143],row[144],row[145],row[146],row[147],row[148],row[149],row[150],row[151],row[152],row[153],row[154],row[155],row[156],row[157],row[158],row[159],row[160],row[161],row[162],row[163],row[164],row[165],row[166],row[167],row[168],row[169],row[170],row[171],row[172],row[173],row[174],row[175],row[176],row[177],row[178],row[179],row[180],row[181],row[182],row[183],row[184],row[185],row[186],row[187],row[188],row[189],row[190],row[191],row[192],row[193],row[194],row[195],row[196],row[197],row[198],row[199],row[200],row[201],row[202],row[203],row[204],row[205],row[206],row[207],row[208],row[209],row[210],row[211],row[212],row[213],row[214],row[215],row[216],row[217],row[218],row[219],row[220],row[221],row[222],row[223],row[224],row[225],row[226],row[227],row[228],row[229],row[230],row[231],row[232],row[233],row[234],row[235],row[236],row[237],row[238],row[239],row[240],row[241],row[242],row[243],row[244],row[245],row[246],row[247],row[248],row[249],row[250],row[251],row[252],row[253],row[254],row[255],row[256],row[257],row[258],row[259],row[260],row[261],row[262],row[263],row[264],row[265],row[266],row[267],row[268],row[269],row[270],row[271],row[272],row[273],row[274],row[275],row[276],row[277],row[278],row[279],row[280],row[281],row[282],row[283],row[284],row[285],row[286],row[287],row[288],row[289],row[290],row[291],row[292],row[293],row[294],row[295],row[296],row[297],row[298],row[299],row[300],row[301],row[302],row[303],row[304],row[305],row[306],row[307],row[308],row[309],row[310],row[311],row[312],row[313],row[314],row[315],row[316],row[317],row[318],row[319],row[320],row[321],row[322],row[323],row[324],row[325],row[326],row[327],row[328],row[329],row[330],row[331],row[332],row[333],row[334],row[335],row[336],row[337],row[338],row[339],row[340],row[341],row[342],row[343],row[344],row[345],row[346],row[347],row[348],row[349],row[350],row[351],row[352],row[353],row[354],row[355],row[356],row[357],row[358],row[359],row[360],row[361],row[362],row[363],row[364],row[365],row[366],row[367],row[368],row[369],row[370],row[371],row[372],row[373],row[374],row[375],row[376],row[377],row[378],row[379],row[380],row[381],row[382],row[383],row[384],row[385],row[386],row[387],row[388],row[389],row[390],row[391],row[392],row[393],row[394],row[395],row[396],row[397],row[398],row[399],row[400],row[401],row[402],row[403],row[404],row[405],row[406],row[407],row[408],row[409],row[410],row[411],row[412],row[413],row[414],row[415],row[416],row[417],row[418],row[419],row[420],row[421],row[422],row[423],row[424],row[425],row[426],row[427],row[428],row[429],row[430],row[431],row[432],row[433],row[434],row[435],row[436],row[437],row[438],row[439],row[440],row[441],row[442],row[443],row[444],row[445],row[446],row[447],row[448],row[449],row[450],row[451],row[452],row[453],row[454],row[455],row[456],row[457],row[458],row[459],row[460],row[461],row[462],row[463],row[464],row[465],row[466],row[467],row[468],row[469],row[470],row[471],row[472],row[473],row[474],row[475],row[476],row[477],row[478],row[479],row[480],row[481],row[482],row[483],row[484],row[485],row[486],row[487],row[488],row[489],row[490],row[491],row[492],row[493],row[494],row[495],row[496],row[497],row[498],row[499],row[500],row[501],row[502],row[503],row[504],row[505],row[506],row[507],row[508],row[509],row[510],row[511],row[512],row[513],row[514],row[515],row[516],row[517],row[518],row[519],row[520],row[521],row[522],row[523],row[524],row[525],row[526],row[527],row[528],row[529],row[530],row[531],row[532],row[533],row[534],row[535],row[536],row[537],row[538],row[539],row[540],row[541],row[542],row[543],row[544],row[545],row[546],row[547],row[548],row[549],row[550],row[551],row[552],row[553],row[554],row[555],row[556],row[557],row[558],row[559],row[560],row[561],row[562],row[563],row[564],row[565],row[566],row[567],row[568],row[569],row[570],row[571],row[572],row[573],row[574],row[575],row[576],row[577],row[578],row[579],row[580],row[581],row[582],row[583],row[584],row[585],row[586],row[587],row[588],row[589],row[590],row[591],row[592],row[593],row[594],row[595],row[596],row[597],row[598],row[599],row[600],row[601],row[602],row[603],row[604],row[605],row[606],row[607],row[608],row[609],row[610],row[611],row[612],row[613],row[614],row[615],row[616],row[617],row[618],row[619],row[620],row[621],row[622],row[623],row[624],row[625],row[626],row[627],row[628],row[629],row[630],row[631],row[632],row[633],row[634],row[635],row[636],row[637],row[638],row[639],row[640],row[641],row[642],row[643],row[644],row[645],row[646],row[647],row[648],row[649],row[650],row[651],row[652],row[653],row[654],row[655],row[656],row[657],row[658],row[659],row[660],row[661],row[662],row[663],row[664],row[665],row[666],row[667],row[668],row[669],row[670],row[671],row[672],row[673],row[674],row[675],row[676],row[677],row[678],row[679],row[680],row[681],row[682],row[683],row[684],row[685],row[686],row[687],row[688],row[689],row[690],row[691],row[692],row[693],row[694],row[695],row[696],row[697],row[698],row[699],row[700],row[701],row[702],row[703],row[704],row[705],row[706],row[707],row[708],row[709],row[710],row[711],row[712],row[713],row[714],row[715],row[716],row[717],row[718],row[719],row[720],row[721],row[722],row[723],row[724],row[725],row[726],row[727],row[728],row[729],row[730],row[731],row[732],row[733],row[734],row[735],row[736],row[737],row[738],row[739],row[740],row[741],row[742],row[743],row[744],row[745],row[746],row[747],row[748],row[749],row[750],row[751],row[752],row[753],row[754],row[755],row[756],row[757],row[758],row[759],row[760],row[761],row[762],row[763],row[764],row[765],row[766],row[767],row[768],row[769],row[770],row[771],row[772],row[773],row[774],row[775],row[776],row[777],row[778],row[779],row[780],row[781],row[782],row[783],row[784],row[785],row[786],row[787],row[788],row[789],row[790],row[791],row[792],row[793],row[794],row[795],row[796],row[797],row[798],row[799],row[800],row[801],row[802],row[803],row[804],row[805],row[806],row[807],row[808],row[809],row[810],row[811],row[812],row[813],row[814],row[815],row[816],row[817],row[818],row[819],row[820],row[821],row[822],row[823],row[824],row[825],row[826],row[827],row[828],row[829],row[830],row[831],row[832],row[833],row[834],row[835],row[836],row[837],row[838],row[839],row[840],row[841],row[842],row[843],row[844],row[845],row[846],row[847],row[848],row[849],row[850],row[851],row[852],row[853],row[854],row[855],row[856],row[857],row[858],row[859],row[860],row[861],row[862],row[863],row[864],row[865],row[866],row[867],row[868],row[869],row[870],row[871],row[872],row[873],row[874],row[875],row[876],row[877],row[878],row[879],row[880],row[881],row[882],row[883],row[884],row[885],row[886],row[887],row[888],row[889],row[890],row[891],row[892],row[893],row[894],row[895],row[896],row[897],row[898],row[899],row[900],row[901],row[902],row[903],row[904],row[905],row[906],row[907],row[908],row[909],row[910],row[911],row[912],row[913],row[914],row[915],row[916],row[917],row[918],row[919],row[920],row[921],row[922],row[923],row[924],row[925],row[926],row[927],row[928],row[929],row[930],row[931],row[932],row[933],row[934],row[935],row[936],row[937],row[938],row[939],row[940],row[941],row[942],row[943],row[944],row[945],row[946],row[947],row[948],row[949],row[950],row[951],row[952],row[953],row[954],row[955],row[956],row[957],row[958],row[959],row[960],row[961],row[962],row[963],row[964],row[965],row[966],row[967],row[968],row[969],row[970],row[971],row[972],row[973],row[974],row[975],row[976],row[977],row[978],row[979],row[980],row[981],row[982],row[983],row[984],row[985],row[986],row[987],row[988],row[989],row[990],row[991],row[992],row[993],row[994],row[995],row[996],row[997],row[998],row[999])
                output.write(rowtxt)
                output.write("\n")
            output.close()
            print("Processing completed to txt")
if __name__ == '__main__':
    data = Create_Data()
    data.deal_txt()